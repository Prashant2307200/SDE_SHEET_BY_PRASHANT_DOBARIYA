class Solution {
    long long findSum(vector<int>& nums, int div) {
        long long sum = 0;
        for(auto& num: nums) 
            sum += ceil(num*1.0/div);
        return sum;
    }
public:
    int smallestDivisor(vector<int>& nums, int threshold) {
        if(nums.size() > threshold)
            return -1;
        int low = 1, high = *max_element(nums.begin(), nums.end());
        while(low <= high) {
            int mid = (low + high)>>1;
            long long sum = findSum(nums, mid);
            if(sum <= threshold) 
                high = mid-1;
            else
                low = mid+1; 
        }
        return low;
    }
};
