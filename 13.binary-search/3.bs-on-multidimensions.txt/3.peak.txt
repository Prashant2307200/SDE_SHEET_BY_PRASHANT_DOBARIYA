class Solution {
    int findMaxIdx(vector<vector<int>>& mat,int n,int m,int col){
        int maxVal = -1 ,maxIdx = -1;
        for(int i = 0; i < n; ++i){
            if(mat[i][col] > maxVal)
                maxVal = mat[i][col], maxIdx = i;
        }
        return maxIdx;
    }
public:
    vector<int> findPeakGrid(vector<vector<int>>& mat) {
        int n = mat.size() ,m = mat[0].size();
        int low = 0 ,high = m-1;
        while(low <= high){
            int col = (low + high)/2;
            int maxRowIdx = findMaxIdx(mat,n,m,col);
            int left = col-1 >= 0? mat[maxRowIdx][col-1] : -1;
            int right = col+1 < m? mat[maxRowIdx][col+1] : -1;
            if(mat[maxRowIdx][col] > left && mat[maxRowIdx][col] > right)
                return {maxRowIdx,col};
            else if(mat[maxRowIdx][col] < left)
                high = col-1;
            else
                low = col+1;
        }
        return {-1,-1};
    }
};
