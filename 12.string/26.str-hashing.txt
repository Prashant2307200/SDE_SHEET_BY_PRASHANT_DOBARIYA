#include<bits/stdc++.h>
using namespace std;

int main(){
    
    vector<string> strs = {
        "aa",
        "ab",
        "aa",
        "b",
        "cc",
        "aa"
    };
    
    sort(strs.begin(),strs.end());
    
    int dist = 0 ,n = strs.size();
    for(int i = 0; i < n; ++i){
        if(i != 0 && strs[i] == strs[i-1]){
            continue;
        }
        dist++;
    }
    cout << dist << endl;
}





#include<bits/stdc++.h>
using namespace std;

int p = 27;
const int N = 1e5+3 ,m = 1e9+7;
vector<long long> pows(N);

long long calcHsh(string s){
    long long hsh = 0;
    int n = s.size();
    for(int i = 0; i < n; ++i){
        hsh += ((s[i]-'a'+1) * pows[i])%m;
    }
    return hsh;
}

int main(){
    
    pows[0] = 1;
    for(int i = 1; i < N; ++i){
        pows[i] = (pows[i-1] * p)%m;
    }
    
    vector<string> strs = {
        "aa",
        "ab",
        "aa",
        "b",
        "cc",
        "aa"
    };
    
    vector<long long> hshs;
    for(auto word : strs){
        hshs.push_back(calcHsh(word));
    }
    
    sort(hshs.begin(),hshs.end());
    
    int n = hshs.size() ,dist = 0;
    for(int i = 0; i < n; ++i){
        if(i != 0 && hshs[i] == hshs[i-1]){
            continue;
        }
        dist++;
    }
    cout << dist << endl;
} 