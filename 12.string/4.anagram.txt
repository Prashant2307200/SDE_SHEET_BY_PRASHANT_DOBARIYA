bool isAnagram(string s, string t) {
    sort(s.begin(), s.end());
    sort(t.begin(), t.end());
    return s == t;
}

bool isAnagram(string s, string t) {
    multiset<char> sm(s.begin(),s.end());
    multiset<char> tm(t.begin(),t.end());
    return sm == tm;
}

class Solution {

    private:
        int hsh[26] = {0};

    public:
        bool isAnagram(string s, string t) {
            int n = s.size(), m = t.size();
            if(n != m)
                return 0;
            for(auto& ch : s)
                hsh[ch-'a']++;
            for(auto& ch : t)
                hsh[ch-'a']--;
            for(auto& freq : hsh){
                if(freq != 0)
                    return 0;
            }
            return 1;
        }
};


bool isAnagram(string s, string t) {
    return is_permutation(s.begin(),s.end(),t.begin(),t.end());
} 
 