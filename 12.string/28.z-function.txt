for(int i = 0; i < T-S+1; ++i){
    if(t.substr(i,S) == s){
        cout << i << endl;
    }
}


#include<bits/stdc++.h>
using namespace std;

vector<int> lps(string s){
    int n = s.size();
    vector<int> pfx(n,0);
    for(int i = 1; i < n; ++i){
        int j = pfx[i-1];
        while(j > 0 && s[i] != s[j]){
            j = pfx[j-1];
        }
        if(s[i] == s[j]){
            j++;
        }
        pfx[i] = j;
    }
    return pfx;
} 

int main(){
    
    string t = "na";
    string s = "apnacollege";
    vector<int> pfx = lps(s);
    
    int pos = -1;
    int i(0) ,j(0);
    int n = s.size() ,m = t.size();
    
    while(i < n && j < m){
        if(s[i] == t[j]){
            i++ ,j++;
        }
        else{
            if(j){
                j = pfx[j-1];
            }
            else{
                i++;
            }
        }
    }
    cout << i - m << endl;
}



#include<bits/stdc++.h>
using namespace std;

int p = 27;
const int N = 1e5+3 ,mod = 1e9+7;
vector<long long> pows(N);
 
int main(){
    
    string t = "na";
    string s = "apnacollege"; 
    
    int n = s.size();
    int m = t.size();
    
    pows[0] = 1;
    for(int i = 1; i < N; ++i){
        pows[i] = (pows[i-1] * p)%mod;
    }
    
    vector<long long> hshs(n+1,0);
    for(int i = 0; i < n; ++i){
        hshs[i+1] = (hshs[i] + (s[i]-'a'+1)*pows[i])%mod;
    }
    
    long long h_t = 0;
    for(int i = 0; i < m; ++i){
        h_t = (h_t + (t[i]-'a'+1)*pows[i])%mod;
    }
    
    for(int i = 0; i < n-m+1; ++i){
        long long cur_h = (hshs[i+m]-hshs[i]+mod)%mod;
        if(cur_h == (h_t*pows[i])%mod){
            cout << i << endl;
        }
    }
}