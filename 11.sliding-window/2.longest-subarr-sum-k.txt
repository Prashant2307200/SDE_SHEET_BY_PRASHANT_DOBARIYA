int lenOfLongSubarr(int A[],  int N, int K) { 
    int maxi = 0;
    for(int i = 1; i < N; ++i)
        A[i] += A[i-1];
    for(int i = 0; i < N; ++i){
        int s = i,e = N-1,ans = i-1;
        while(s < e){
            int mid = (s+e)>>1;
            int sum = A[mid]- i ? A[i-1] : 0;
            if(sum <= K){
                ans = mid;
                s = mid+1;
            }
            else
                e = mid-1;
        }
        maxi = max(maxi,ans-i+1);
    }
    return maxi;
} 

int longestSubarrayWithSumK(vector<int> a, long long k) {
    int n = a.size() ,i = 0 ,j = 0 ,maxi = 0;
    long long sum = 0;
    for(int j = 0; j < n; ++j){
        sum += a[j];
        while(sum > k)
            sum -= a[i++];
        maxi = max(maxi ,j-i+1);
    }
    return maxi;
}

int longestSubarrayWithSumK(vector<int> a, long long k) {
    int n = a.size() ,i = 0 ,j = 0 ,maxi = 0;
    long long sum = 0;
    for(int j = 0; j < n; ++j){
        sum += a[j];
        if(sum > k)
            sum -= a[i++];
        maxi = max(maxi ,j-i+1);
    }
    return maxi;
}