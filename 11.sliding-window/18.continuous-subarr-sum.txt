bool checkSubarraySum(vector<int>& nums, int k) {
    int n = nums.size();
    for(int i = 0; i < n; ++i){
        int sum = nums[i];
        for(int j = i+1; j < n; ++j){
            sum += nums[j];
            if(sum%k == 0)
                return 1;
        }
    }
    return 0;
}

    bool checkSubarraySum(vector<int>& nums, int k) {
        int n = nums.size(), pfx = 0;
        unordered_map<int,int> hsh;
        hsh[0] = -1;
        for(int i = 0; i < n; ++i) {
            int num = nums[i];
            pfx += num;
            int rem = pfx % k;
            if(hsh.count(rem)) {
                if(i - hsh[rem] >= 2)
                    return 1;
            } 
            else 
                hsh[rem] = i;
        }
        return 0;
    }
