int maxProfit(vector<int>& prices) {
    int n = prices.size() ,maxProfit = 0 ,mini = prices[0];
    for(int i = 1; i < n; ++i){
        int profit = prices[i] - mini;
        maxProfit = max(maxProfit ,profit);
        mini = min(mini,prices[i]);
    }
    return maxProfit;
}

int maxProfit(vector<int>& prices) {
    int n = prices.size();
    int left = 0 ,right = 0 ,maxProfit = 0;
    while(right < n){
        int profit = prices[right] - prices[left];
        if(profit < 0)  left = right;
        maxProfit = max(maxProfit,profit);
        ++right;
    }
    return maxProfit;
}