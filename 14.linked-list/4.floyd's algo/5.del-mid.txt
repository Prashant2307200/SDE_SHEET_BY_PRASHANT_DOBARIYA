class Solution {
    ListNode* middleNode(ListNode* head) {
        ListNode* slow = head;
        ListNode* fast = head -> next;
        while(fast && fast -> next) 
            slow = slow -> next, fast = fast -> next -> next;
        if(fast == NULL)
            return slow;
        return slow -> next;
    }
public:
    ListNode* deleteMiddle(ListNode* head) {
        if(!head || !head -> next)
            return NULL;
        if(!head -> next -> next) {
            ListNode* toDel = head -> next;
            head -> next = NULL;
            delete toDel;
            return head;
        }
        ListNode* middle = middleNode(head); 
        *middle = *middle -> next;
        return head;
    }
};

    ListNode* deleteMiddle(ListNode* head) {
        if(head -> next == NULL)
            return NULL;
        ListNode* slow = head;
        ListNode* fast = head;
        fast = fast -> next -> next;
        while(fast && fast -> next) 
            slow = slow -> next, fast = fast -> next -> next;
        slow -> next = slow -> next -> next;
        return head;
    }