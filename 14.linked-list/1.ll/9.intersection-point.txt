class Solution {

    int len(ListNode *head){
        ListNode* slow = head;
        ListNode* fast = head;
        int l = 0;
        while(fast && fast -> next) 
            l += 2, slow = slow -> next, fast = fast -> next -> next;
        if(fast)
            l++;
        return l;
    }

public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        int l1 = len(headA);
        int l2 = len(headB);
        int cnt;
        ListNode* head1;
        ListNode* head2;
        if(l1 > l2){
            cnt = l1 - l2;
            head1 = headA;
            head2 = headB;
        }
        else{
            cnt = l2 - l1;
            head1 = headB;
            head2 = headA;
        }
        while(cnt--){
            if(head1 == NULL)
                return NULL;
            head1 = head1 -> next;
        }
        while(head1 && head2){
            if(head1 == head2)
                return head1;
            head1 = head1 -> next;
            head2 = head2 -> next;
        }
        return NULL;
    }
};