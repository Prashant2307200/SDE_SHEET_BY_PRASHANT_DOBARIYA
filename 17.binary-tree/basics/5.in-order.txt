class Solution {
    void helper(TreeNode* root,vector<int> &ans){
        if(root == NULL)    return;
        helper(root->left,ans);
        ans.push_back(root->val);
        helper(root->right,ans);
    }
public:
    vector<int> inorderTraversal(TreeNode* root) {
        vector<int> ans;
        helper(root,ans);
        return ans;
    }
};


    vector<int> inorderTraversal(TreeNode* root) {
        vector<int> inorder;
        stack<TreeNode*> s;
        TreeNode* node = root;
        while(1){
            if(node != NULL) {
                s.push(node);
                node = node -> left;
            }
            else{
                if(s.empty())   
                    break;
                node = s.top();
                s.pop();
                inorder.push_back(node -> val);
                node = node -> right;
            }
        }
        return inorder;
    }