    int minDistance(string word1, string word2) {
        int n = word1.size(), m = word2.size();
        vector<vector<int>> dp(n+1, vector<int> (m+1, 1e8));
        for(int i = 0; i <= n; ++i) dp[i][0] = i;
        for(int j = 0; j <= m; ++j) dp[0][j] = j;
        for(int i = 1; i <= n; ++i) {
            for(int j = 1; j <= m; ++j) {
                if(word1[i-1] == word2[j-1]) dp[i][j] = dp[i-1][j-1];
                else dp[i][j] = min({ dp[i][j-1], dp[i-1][j], dp[i-1][j-1] }) + 1;
            }
        }
        return dp[n][m];
    }


    int minDistance(string word1, string word2) {
        int n = word1.size(), m = word2.size(); 
        vector<int> dp(m+1, 1e8);
        for(int j = 0; j <= m; ++j) dp[j] = j;
        for(int i = 1; i <= n; ++i) {
            int prev = 1, curr;
            for(int j = 0; j <= m; ++j) {
                curr = dp[j];
                if(j == 0) dp[0] = i;
                else if(word1[i-1] == word2[j-1]) dp[j] = prev;
                else dp[j] = min({dp[j-1] + 1, dp[j] + 1, prev + 1});
                prev = curr;
            }
        }
        return dp[m];
    }