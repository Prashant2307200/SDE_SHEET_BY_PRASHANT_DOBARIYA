    int coinChange(vector<int>& coins, int amount) {
        int n = coins.size(); // sorting not required
        vector<int> dp(amount+1, 1e8);
        dp[0] = 0;
        for(int i = 1; i <= amount; ++i) {
            for(auto& coin: coins) {
                int coinInc = i >= coin ? dp[i-coin]:1e8;
                dp[i] = min(dp[i], coinInc + 1);
            }
        }
        return dp[amount] == 1e8 ? -1:dp[amount];
    }
    
    int coinChange(vector<int>& coins, int amount) {
        int n = coins.size();
        vector<int> dp(amount+1, 1e8);
        dp[0] = 0;
        for(int i = 1; i <= n; ++i) {
            for(int j = coins[i-1]; j <= amount; ++j) 
                dp[j] = min(dp[j], dp[j-coins[i-1]] + 1);
        }
        return dp[amount] == 1e8 ? -1:dp[amount];
    }