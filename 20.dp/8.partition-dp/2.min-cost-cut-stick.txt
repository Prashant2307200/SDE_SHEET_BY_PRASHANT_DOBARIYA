    int minCost(int n, vector<int>& cuts) {
        int c = cuts.size();
        cuts.push_back(n);
        cuts.insert(cuts.begin(), 0);
        sort(cuts.begin(), cuts.end());
        vector<vector<int>> dp(c+2, vector<int> (c+2, 0));
        for(int i = 0; i <= c+1; ++i) dp[i][i] = 0;
        for(int i = c; i >= 1; --i) {
            for(int j = i; j <= c; ++j) {
                int mini = INT_MAX;
                for(int k = i; k <= j; ++k) {
                    int left = dp[i][k-1];
                    int right = dp[k+1][j];
                    int curr = cuts[j+1] - cuts[i-1];
                    mini = min(mini, left + right + curr);
                }
                dp[i][j] = mini;
            }
        }
        return dp[1][c];
    }