    int fib(int n) {
        if(n < 2) return n;
        return fib(n-1) + fib(n-2);
    }


class Solution {
    vector<int> dp;
    int f(int n) {
        if(n < 2) return n;
        if(dp[n] != -1) return dp[n];
        return dp[n] = f(n-1) + f(n-2);
    }
public:
    int fib(int n) {
        dp = vector<int> (n+1, -1);
        return f(n);
    }
};


    int fib(int n) {
        vector<int> dp(n+1, 0);
        dp[1] = 1;
        for(int i = 2; i <= n; ++i) 
            dp[i] = dp[i-1] + dp[i-2];
        return dp[n];
    }


    int fib(int n) {
        if(!n) return n;
        int dp0 = 0, dp1 = 1, dp;
        for(int i = 2; i <= n; ++i) 
            dp = dp1 + dp0, dp0 = dp1, dp1 = dp;
        return dp1;
    }