    int candy(vector<int>& ratings) {
        int pfx = 1, sfx = 1, n = ratings.size(); 
        vector<int> hsh(n, 1); 
        for(int i = 1; i < n; ++i) {
            if(ratings[i] > ratings[i-1]) ++pfx;
            else pfx = 1;
            if(ratings[n-1-i] > ratings[n-i]) ++sfx;
            else sfx = 1;
            hsh[i] = max(hsh[i], pfx);
            hsh[n-1-i] = max(hsh[n-1-i], sfx);
        }
        return accumulate(hsh.begin(), hsh.end(), 0);
    }


    int candy(vector<int>& ratings) {
        int n = ratings.size(), mini = 1, i = 1;
        while(i < n) {
            while(i < n && ratings[i] == ratings[i-1])
                ++mini, ++i;
            int peak = 1;
            while(i < n && ratings[i] > ratings[i-1]) 
                mini += ++peak, ++i;
            int vally = 1;
            while(i < n && ratings[i] < ratings[i-1])
                mini += vally++, ++i;
            mini += max(0, vally - peak);
        }
        return mini;
    }
