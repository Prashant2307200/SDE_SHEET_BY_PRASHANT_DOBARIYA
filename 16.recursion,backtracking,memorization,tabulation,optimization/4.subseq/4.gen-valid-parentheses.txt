class Solution {
    void f(int n,vector<string>& ans,string s,int open,int close){
        if(open==n && close==n){
            ans.push_back(s);
            return;
        }
        if(open < n){
            s.push_back('(');
            f(n,ans,s,open+1,close);
            s.pop_back();
        }
        if(close < n){
            if(open > close){
                s.push_back(')');
                f(n,ans,s,open,close+1);
                s.pop_back();
            }
        }
    }
public:
    vector<string> generateParenthesis(int n) {
        vector<string> ans;
        f(n,ans,"",0,0);
        return ans;
    }
};