class Solution {
    vector<vector<int>> dp;
    int f(int n, int amount, vector<int>& coins) {
        if(!n)
            return !amount;
        if(dp[n][amount] != -1)
            return dp[n][amount];
        int exc = f(n-1, amount, coins);
        if(coins[n-1] > amount)
            return dp[n][amount] = exc;
        int inc = f(n, amount-coins[n-1], coins);
        return dp[n][amount] = inc + exc;
    }
public:
    int change(int amount, vector<int>& coins) {
        int n = coins.size();
        dp = vector<vector<int>> (1, vector<int> (amount+1, 0));
        vector<int> dp(amount+1, 0);
        dp[0] = 1;
        for(int i = 1; i <= n; ++i) {
            for(int j = coins[i-1]; j <= amount; ++j) 
                dp[j] += dp[j-coins[i-1]];
        }
        return dp[amount];
    }
};