vector<bool> isSubsetSum(vector<int>arr, int sum){
    int n = arr.size();
    vector<vector<bool>> dp(2,vector<bool>(sum+1,false));
    dp[0][0] = true;
    for(int i = 1; i <= n; ++i){
        for(int j = 0; j <= sum; ++j){
            if(i == 0 && j == 0)    continue;
            if(j < arr[i-1]){
                dp[1][j] = dp[0][j];
                continue;
            }
            dp[1][j] = dp[0][j]|dp[0][j-arr[i-1]];
        }
        dp[0] = dp[1];
    }
    return dp[0];
}
int minSubsetSumDifference(vector<int>& arr, int n){
	int sum = accumulate(arr.begin(),arr.end(),0);
	vector<bool> dp = isSubsetSum(arr,sum);
	int mini = INT_MAX;
	for(int i = 0; i <= sum/2; ++i){
		if(!dp[i])	continue;
		mini = min(mini,abs((sum-i)-i));
	}
	return mini;
}