class Solution {
    vector<vector<int>> dirs = {
        {1,0},
        {-1,0},
        {0,1},
        {0,-1}
    };
    bool find(vector<vector<char>>& board,int i,int j,int n,int m,int idx,int size,string word){
        if(idx >= size)    return 1;
        if(i >= m || i < 0 || j < 0 || j >= n)  return 0;
        if(board[i][j] == '$')   return 0;
        if(board[i][j] != word[idx])    return 0;
        char temp = board[i][j];
        board[i][j] = '$';
        for(auto& dir: dirs){
            int new_i = i + dir[0];
            int new_j = j + dir[1];
            if(find(board,new_i,new_j,n,m,idx+1,size,word)){
                return 1;
            }
        }
        board[i][j] = temp;
        return 0;
    }
public:
    bool exist(vector<vector<char>>& board, string word) {
        int m = board.size(),n = board[0].size();
        for(int i = 0; i < m; ++i){
            for(int j = 0; j < n; ++j){
                if(board[i][j] == word[0] && find(board,i,j,n,m,0,word.size(),word)){
                    return 1;
                }
            }
        }
        return 0;
    }
};