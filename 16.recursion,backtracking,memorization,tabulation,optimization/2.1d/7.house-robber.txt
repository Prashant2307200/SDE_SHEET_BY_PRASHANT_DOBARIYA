class Solution {
    int f(vector<int>& nums, int n, vector<int>& dp){
        if(n < 1)  return 0;
        if(dp[n] != -1) return dp[n];
        int inc = f(nums, n-2, dp) + nums[n-1];
        int exc = f(nums, n-1, dp);
        return dp[n] = max(inc, exc);
    }
public:
    int rob(vector<int>& nums) {
        int n = nums.size();
        vector<int> dp(n+1);
        dp[0] = 0, dp[1] = nums[0];
        for(int i = 2; i <= n; ++i){
            int inc = dp[i-2] + nums[i-1];
            int exc = dp[i-1];
            dp[i] = max(inc, exc);
        }
        return dp[n];
    }
};


    int rob(vector<int>& nums) {
        int n = nums.size();
        vector<int> dp(3);
        dp[0] = 0, dp[1] = nums[0];
        for(int i = 2; i <= n; ++i){
            int inc = dp[0] + nums[i-1];
            int exc = dp[1];
            dp[2] = max(inc, exc);
            dp[0] = dp[1], dp[1] = dp[2];
        }
        return dp[n != 0];
    }