class Solution {
    int num(char ch){
        if(ch == 'I')       return 1;
        else if(ch == 'V')  return 5;
        else if(ch == 'X')  return 10;
        else if(ch == 'L')  return 50;
        else if(ch == 'C')  return 100;
        else if(ch == 'D')  return 500;
        else                return 1000;
    }
public:
    int romanToInt(string s) {
        int ans = 0;
        int n = s.size();
        for(int i = 1; i < n; ++i){
            if(num(s[i]) > num(s[i-1]))
                ans -= num(s[i-1]);
            else
                ans += num(s[i-1]);
        }
        ans += num(s[n-1]);
        return ans;
    }
};

class Solution {
    pair<string,int> roman(int n){
        if     (n >= 1000)  return {"M",1000};
        else if(n >= 900)   return {"CM",900};
        else if(n >= 500)   return {"D",500};
        else if(n >= 400)   return {"CD",400};
        else if(n >= 100)   return {"C",100};
        else if(n >= 90)    return {"XC",90};
        else if(n >= 50)    return {"L",50};
        else if(n >= 40)    return {"XL",40};
        else if(n >= 10)    return {"X",10};
        else if(n >= 9)     return {"IX",9};
        else if(n  >= 5)     return {"V",5};
        else if(n >= 4)     return {"IV",4};
        return {"I",1};
    }
public:
    string intToRoman(int num) {
        int n = num;
        string ans;
        while(n){
            auto pr = roman(n);
            ans += pr.first;
            n -= pr.second;
        }
        return ans;
    }
};