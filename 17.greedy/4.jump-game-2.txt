class Solution {
    int f(vector<int>& nums, int i, int n){
        if(i >= n-1)
            return 0;
        int mini = 1e8;
        int jumps = nums[i];
        for(int j = 1; j <= jumps; ++j){
            int rop = f(nums, i+j, n);
            mini = min(mini, rop);
        }
        return mini+1;
    }
public:
    int jump(vector<int>& nums) {
        return f(nums, 0, nums.size());
    }
};


int jump(vector<int>& nums) {
    int n = nums.size(), l ,r ,jumps;
    l = r = jumps = 0;
    while(r < n-1) {
        int farthest = 0;
        for(int i = l; i <= r; ++i) 
            farthest = max(farthest, nums[i]+i);
        l = r+1;
        r = farthest;
        jumps++;
    }
    return jumps;
}