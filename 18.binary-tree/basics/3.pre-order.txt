class Solution {
    void helper(TreeNode* root,vector<int>& ans){
        if(root == NULL)    return;
        ans.push_back(root->val);
        helper(root->left,ans);
        helper(root->right,ans);
    }
public:
    vector<int> preorderTraversal(TreeNode* root) {
        vector<int> ans;
        helper(root,ans);
        return ans;
    }
};

    vector<int> preorderTraversal(TreeNode* root) {
        vector<int> preorder;
        if(root == NULL)    
            return preorder;
        stack<TreeNode*> st;
        st.push(root);
        while(!st.empty()){
            TreeNode* node = st.top();
            st.pop();
            preorder.push_back(node -> val);
            if(node -> right)   
                st.push(node -> right);
            if(node -> left)    
                st.push(node -> left);
        }
        return preorder;
    }